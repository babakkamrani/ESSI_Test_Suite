//--------------------------------------------------------------------------------------------------------
//    Compuatational Geomechanics Group at UCDavis - GID to essi translator
//    Written by: Babak Kamrani
//    Last Update:4/1/2014
//    Version:  0.1
//--------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------
//                  Generated by Compuatational Geomechanics Group at UCDavis - GID to essi translator
//--------------------------------------------------------------------------------------------------------                  
model name "1SolidsContact+FullSideContact";
new loading stage "UniformLoad";
//------------------------ Mesh Nodal Data --------------------------


add node #       1 at (          0*m,          1*m,          1*m)         with 3 dofs;
add node #       2 at (        0.5*m,          1*m,          1*m)         with 3 dofs;
add node #       3 at (          0*m,          1*m,        0.5*m)         with 3 dofs;
add node #       4 at (          0*m,        0.5*m,          1*m)         with 3 dofs;
add node #       5 at (        0.5*m,        0.5*m,          1*m)         with 3 dofs;
add node #       6 at (          0*m,        0.5*m,        0.5*m)         with 3 dofs;
add node #       7 at (        0.5*m,          1*m,        0.5*m)         with 3 dofs;
add node #       8 at (        0.5*m,        0.5*m,        0.5*m)         with 3 dofs;
add node #       9 at (          0*m,          1*m,          0*m)         with 3 dofs;
add node #      10 at (          0*m,          0*m,          1*m)         with 3 dofs;
add node #      11 at (          1*m,          1*m,          1*m)         with 3 dofs;
add node #      12 at (        0.5*m,          1*m,          0*m)         with 3 dofs;
add node #      13 at (          0*m,        0.5*m,          0*m)         with 3 dofs;
add node #      14 at (          0*m,          0*m,        0.5*m)         with 3 dofs;
add node #      15 at (        0.5*m,          0*m,          1*m)         with 3 dofs;
add node #      16 at (          1*m,        0.5*m,          1*m)         with 3 dofs;
add node #      17 at (          1*m,          1*m,        0.5*m)         with 3 dofs;
add node #      18 at (          1*m,        0.5*m,        0.5*m)         with 3 dofs;
add node #      19 at (        0.5*m,          0*m,        0.5*m)         with 3 dofs;
add node #      20 at (        0.5*m,        0.5*m,          0*m)         with 3 dofs;
add node #      21 at (          0*m,          0*m,          0*m)         with 3 dofs;
add node #      22 at (          1*m,          1*m,          0*m)         with 3 dofs;
add node #      23 at (          1*m,          0*m,          1*m)         with 3 dofs;
add node #      24 at (        0.5*m,          0*m,          0*m)         with 3 dofs;
add node #      25 at (          1*m,        0.5*m,          0*m)         with 3 dofs;
add node #      26 at (          1*m,          0*m,        0.5*m)         with 3 dofs;
add node #      27 at (          1*m,          0*m,          0*m)         with 3 dofs;

//Bottom Contact Nodes:
add node #       28 at (          0*m,          0*m,          0*m)         with 3 dofs;
add node #       29 at (          0*m,          0.5*m,        0*m)         with 3 dofs;
add node #       30 at (          0*m,          1*m,          0*m)         with 3 dofs;
add node #       31 at (          0.5*m,        0*m,          0*m)         with 3 dofs;
add node #       32 at (          0.5*m,        0.5*m,        0*m)         with 3 dofs;
add node #       33 at (          0.5*m,        1*m,          0*m)         with 3 dofs;
add node #       34 at (          1*m,           0*m,         0*m)         with 3 dofs;
add node #       35 at (          1*m,           0.5*m,       0*m)         with 3 dofs;
add node #       36 at (          1*m,           1*m,         0*m)         with 3 dofs;
    
//Side Contact Nodes X =0
add node #       37 at (          0*m,          1*m,          1*m)         with 3 dofs;
add node #       38 at (          0*m,          1*m,        0.5*m)         with 3 dofs;
add node #       39 at (          0*m,          0.5*m,        1*m)         with 3 dofs;
add node #       40 at (          0*m,          0.5*m,      0.5*m)         with 3 dofs;
add node #       41 at (          0*m,          1*m,          0*m)         with 3 dofs;
add node #       42 at (          0*m,          0*m,          1*m)         with 3 dofs;
add node #       43 at (          0*m,          0.5*m,        0*m)         with 3 dofs;
add node #       44 at (          0*m,          0*m,         0.5*m)         with 3 dofs;
add node #       45 at (          0*m,          0*m,          0*m)         with 3 dofs;

//Side Contact Nodes X =1
add node #       46 at (          1*m,          1*m,          1*m)         with 3 dofs;
add node #       47 at (          1*m,          0.5*m,          1*m)         with 3 dofs;
add node #       48 at (          1*m,          1*m,          0.5*m)         with 3 dofs;
add node #       49 at (          1*m,          0.5*m,          0.5*m)         with 3 dofs;
add node #       50 at (          1*m,          1*m,          0*m)         with 3 dofs;
add node #       51 at (          1*m,          0*m,          1*m)         with 3 dofs;
add node #       52 at (          1*m,          0.5*m,          0*m)         with 3 dofs;
add node #       53 at (          1*m,          0*m,          0.5*m)         with 3 dofs;
add node #       54 at (          1*m,          0*m,          0*m)         with 3 dofs;

//Side Contact Nodes Y =0
add node #       55 at (          0*m,          0*m,          1*m)         with 3 dofs;
add node #       56 at (          0*m,          0*m,          0.5*m)         with 3 dofs;
add node #       57 at (          0.5*m,          0*m,          1*m)         with 3 dofs;
add node #       58 at (          0.5*m,          0*m,          0.5*m)         with 3 dofs;
add node #       59 at (          0*m,          0*m,          0*m)         with 3 dofs;
add node #       60 at (          1*m,          0*m,          1*m)         with 3 dofs;
add node #       61 at (          0.5*m,          0*m,          0*m)         with 3 dofs;
add node #       62 at (          1*m,          0*m,          0.5*m)         with 3 dofs;
add node #       63 at (          1*m,          0*m,          0*m)         with 3 dofs;


//side Contact Nodes Y =1
add node #       64 at (          0*m,          1*m,          1*m)         with 3 dofs;
add node #       65 at (          0.5*m,          1*m,          1*m)         with 3 dofs;
add node #       66 at (          0*m,          1*m,          0.5*m)         with 3 dofs;
add node #       67 at (          0.5*m,          1*m,          0.5*m)         with 3 dofs;
add node #       68 at (          0*m,          1*m,          0*m)         with 3 dofs;
add node #       69 at (          1*m,          1*m,          1*m)         with 3 dofs;
add node #       70 at (          0.5*m,          1*m,          0*m)         with 3 dofs;
add node #       71 at (          1*m,          1*m,          0.5*m)         with 3 dofs;
add node #       72 at (          1*m,          1*m,          0*m)         with 3 dofs;




//------------------------ End of Mesh Nodal Data -------------------
//------------------------  Material Data----------------------------
soil_material_number = 1;
soil_density = 1800*kg/m^3;
soil_shear_wave_velocity = 550*m/s;
soil_poisson = 0.3;
soil_shear_modulus = soil_density*soil_shear_wave_velocity^2;
soil_elastic_modulus = 2 * (1 + soil_poisson ) * soil_shear_modulus;


concrete_material_number = 2;
concrete_density = 2200*kg/m^3;
concrete_shear_wave_velocity = 2500*m/s;
concrete_poisson = 0.3;
concrete_shear_modulus = concrete_density * concrete_shear_wave_velocity ^2;
concrete_elastic_modulus = 2 * (1 + concrete_poisson ) * concrete_shear_modulus;

add material #    soil_material_number     type linear_elastic_isotropic_3d mass_density =     soil_density elastic_modulus     =       soil_elastic_modulus poisson_ratio     =  soil_poisson;
add material #    concrete_material_number type linear_elastic_isotropic_3d mass_density =     concrete_density elastic_modulus =       concrete_elastic_modulus poisson_ratio =  concrete_poisson;

add acceleration field # 1 ax=0.0*m/s^2 ay=0.0*m/s^2 az=-9.81*m/s^2;


//------------------------ Mesh Emlement Data -----------------------
//Solids
//------------------------  Material Data----------------------------

//------------------------ Mesh Emlement Data -----------------------

add element #          1 type 27NodeBrick_elastic with nodes (         11,           1,          10,          23,          22,           9,          21,          27,           2,           4,          15,          16,          12,          13,          24,          25,          17,           3,          14,          26,           8,           7,           6,          19,          18,           5,          20) use material #           soil_material_number;

contact_tangent_stiffness = 18750000000*N/m;
// contact_tangent_stiffness = .001*N/m;
contact_normal_stiffness  = 18750000000*N/m;

add element #  2 type contact with nodes  (28,21) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,0.0,1.0); 
add element #  3 type contact with nodes  (29,13) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,0.0,1.0); 
add element #  4 type contact with nodes  (30,9)  normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,0.0,1.0); 
add element #  5 type contact with nodes  (31,24) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,0.0,1.0); 
add element #  6 type contact with nodes  (32,20) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,0.0,1.0); 
add element #  7 type contact with nodes  (33,12) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,0.0,1.0); 
add element #  8 type contact with nodes  (34,27) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,0.0,1.0); 
add element #  9 type contact with nodes  (35,25) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,0.0,1.0); 
add element #  10 type contact with nodes (36,22) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,0.0,1.0);


// //Side Contacts X =0
add element #  11 type contact with nodes (37,1) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (1.0,0.0,0.0); 
add element #  12 type contact with nodes (38,3) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (1.0,0.0,0.0);
add element #  13 type contact with nodes (39,4) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (1.0,0.0,0.0); 
add element #  14 type contact with nodes (40,6) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (1.0,0.0,0.0);
add element #  15 type contact with nodes (41,9) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (1.0,0.0,0.0); 
add element #  16 type contact with nodes (42,10) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (1.0,0.0,0.0);
add element #  17 type contact with nodes (43,13) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (1.0,0.0,0.0); 
add element #  18 type contact with nodes (44,14) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (1.0,0.0,0.0);
add element #  19 type contact with nodes (45,21) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (1.0,0.0,0.0);
// 
// 
// //Side Contact Nodes X =1
add element #  20 type contact with nodes (46,11) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (-1.0,0.0,0.0); 
add element #  21 type contact with nodes (47,16) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (-1.0,0.0,0.0);
add element #  22 type contact with nodes (48,17) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (-1.0,0.0,0.0); 
add element #  23 type contact with nodes (49,18) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (-1.0,0.0,0.0);
add element #  24 type contact with nodes (50,22) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (-1.0,0.0,0.0); 
add element #  25 type contact with nodes (51,23) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (-1.0,0.0,0.0);
add element #  26 type contact with nodes (52,25) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (-1.0,0.0,0.0); 
add element #  27 type contact with nodes (53,26) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (-1.0,0.0,0.0);
add element #  28 type contact with nodes (54,27) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (-1.0,0.0,0.0);
// 
// // 
// //Side Contact Nodes Y =0
add element #  29 type contact with nodes (55,10) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,1.0,0.0); 
add element #  30 type contact with nodes (56,14) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,1.0,0.0);
add element #  31 type contact with nodes (57,15) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,1.0,0.0); 
add element #  32 type contact with nodes (58,19) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,1.0,0.0);
add element #  33 type contact with nodes (59,21) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,1.0,0.0); 
add element #  34 type contact with nodes (60,23) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,1.0,0.0);
add element #  35 type contact with nodes (61,24) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,1.0,0.0); 
add element #  36 type contact with nodes (62,26) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,1.0,0.0);
add element #  37 type contact with nodes (63,27) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,1.0,0.0);
// 
// 
// //Side Contact Nodes Y =1
add element #  38 type contact with nodes (64,1) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,-1.0,0.0); 
add element #  39 type contact with nodes (65,2) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,-1.0,0.0);
add element #  40 type contact with nodes (66,3) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,-1.0,0.0); 
add element #  41 type contact with nodes (67,7) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,-1.0,0.0);
add element #  42 type contact with nodes (68,9) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,-1.0,0.0); 
add element #  43 type contact with nodes (69,11) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,-1.0,0.0);
add element #  44 type contact with nodes (70,12) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,-1.0,0.0); 
add element #  45 type contact with nodes (71,17) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,-1.0,0.0);
add element #  46 type contact with nodes (72,22) normal_stiffness = contact_normal_stiffness /9 tangential_stiffness = contact_tangent_stiffness /9  friction_ratio = 1.0 maximum_gap = 0.1*m contact_plane_vector = (0.0,-1.0,0.0);




//------------------------ End of Mesh Emlement Data ----------------

fix node #  21 dofs uz;
fix node #  13 dofs uz;
fix node #  9  dofs uz;
fix node #  24 dofs uz;
fix node #  20 dofs uz;
fix node #  12 dofs uz;
fix node #  27 dofs uz;
fix node #  25 dofs uz;
fix node #  22 dofs uz;




fix node #  28 dofs all;
fix node #  29 dofs all;
fix node #  30 dofs all;
fix node #  31 dofs all;
fix node #  32 dofs all;
fix node #  33 dofs all;
fix node #  34 dofs all;
fix node #  35 dofs all;
fix node #  36 dofs all;

fix node #  37 dofs all;
fix node #  38 dofs all;
fix node #  39 dofs all;
fix node #  40 dofs all;
fix node #  41 dofs all;
fix node #  42 dofs all;
fix node #  43 dofs all;
fix node #  44 dofs all;
fix node #  45 dofs all;

fix node #  46 dofs all;
fix node #  47 dofs all;
fix node #  48 dofs all;
fix node #  49 dofs all;
fix node #  50 dofs all;
fix node #  51 dofs all;
fix node #  52 dofs all;
fix node #  53 dofs all;
fix node #  54 dofs all;

fix node #  55 dofs all;
fix node #  56 dofs all;
fix node #  57 dofs all;
fix node #  58 dofs all;
fix node #  59 dofs all;
fix node #  60 dofs all;
fix node #  61 dofs all;
fix node #  62 dofs all;
fix node #  63 dofs all;

fix node #  64 dofs all;
fix node #  65 dofs all;
fix node #  66 dofs all;
fix node #  67 dofs all;
fix node #  68 dofs all;
fix node #  69 dofs all;
fix node #  70 dofs all;
fix node #  71 dofs all;
fix node #  72 dofs all;



//------------------------ Nodes Constraint Data -----------------------

// Load
uniform_load_value = 1800*9.81*N/m^2;
add load # 1 to node # 1  type  linear Fz=(-1*m^2 / 36)  * uniform_load_value;
add load # 2 to node # 10 type linear  Fz=(-1*m^2 / 36)  * uniform_load_value;
add load # 3 to node # 11 type linear  Fz=(-1*m^2 / 36)  * uniform_load_value;
add load # 4 to node # 23 type linear  Fz=(-1*m^2 / 36)  * uniform_load_value;

add load # 5 to node # 4  type  linear Fz=(-4*m^2 / 36)  * uniform_load_value;
add load # 6 to node # 16 type linear  Fz=(-4*m^2 / 36)  * uniform_load_value;
add load # 7 to node # 2  type linear  Fz=(-4*m^2 / 36)  * uniform_load_value;
add load # 8 to node # 15 type linear  Fz=(-4*m^2 / 36)  * uniform_load_value;
// 
add load # 9 to node # 5 type linear Fz=(-16*m^2 / 36)  * uniform_load_value;


// add load # 1 to element # 1 type self_weight use acceleration field # 1;






n_step = 1;

define load factor increment 1/n_step;
define algorithm With_no_convergence_check;
// define convergence test Norm_Unbalance tolerance = 1000*N maximum_iterations = 100 verbose_level = 4;
// define convergence test Norm_Displacement_Increment tolerance = 0.1*m maximum_iterations = 50 verbose_level = 4;
// define algorithm Newton;
// define solver ProfileSPD;
define solver UMFPack;

simulate n_step steps using static algorithm;


// define load factor increment 0.001;
// // define algorithm With_no_convergence_check;
// define convergence test Norm_Unbalance tolerance = 1000*N maximum_iterations = 1000 verbose_level = 4;
// // define convergence test Norm_Displacement_Increment tolerance = 0.1*m maximum_iterations = 50 verbose_level = 4;
// define algorithm Newton;
// define solver ProfileSPD;
// 
// simulate 1000 steps using static algorithm;

bye;
//------------------------ Nodes Constraint Data -----------------------
