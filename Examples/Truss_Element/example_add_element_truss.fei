//essi test suite
//developed by Babak Kamrani
//babakkamrani@yahoo.com
//------------------------------------

// Model Definition:
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
model name "truss";
add material # 1 type uniaxial_elastic elastic_modulus = 2 *39476.089*N/m^2 viscoelastic_modulus = 0.0*kg/m/s;

// Coordinates of the Nodes
add node No 1  at (0*m, 0*m ,  0*m) with 3 dofs;      
add node No 2  at (0*m, 0*m ,  1*m) with 3 dofs;

// Add Truss Element
add element # 1 type truss with nodes (1, 2) use material # 1 cross_section=1.0*m^2 mass_density=0.0*kg/m^3;
add mass to node # 2 mx = 0*kg my = 0*kg mz = 1000*kg;
add damping # 1 type Rayleigh with a0 = 1.23*1/s a1 = .003*s stiffness_to_use = Initial_Stiffness;
add damping # 1 to element # 1;

// Constrains
fix node No 1 dofs all;
fix node No 2 dofs ux uy;

// //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// // Eigen Analysis .... 
// //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// new loading stage "Eigen";
// simulate using eigen algorithm number_of_modes = 1;
// 
// //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// // Static Loading .... 
// //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// new loading stage "Static";
// add load # 1 to node # 2 type linear Fz=100*N;
// define algorithm With_no_convergence_check;
// define load factor increment 0.1;
// define solver ProfileSPD;
// simulate 10 steps using static algorithm;
// 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Dynamic Simulation .... 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
new loading stage "Shake";
add imposed motion # 3 to node # 1 dof uz displacement_scale_unit = 1.0*m displacement_file = "../Motion_Files/pathtimeseries_displacement.feimotion" 
									    velocity_scale_unit = 1.0*m/s velocity_file = "../Motion_Files/pathtimeseries_velocity.feimotion" 
									    acceleration_scale_unit = 1.0*m/s/s acceleration_file = "../Motion_Files/pathtimeseries_acceleration.feimotion";
define dynamic integrator Newmark with gamma = 0.5 beta = 0.25;
define algorithm With_no_convergence_check;
define solver ProfileSPD;
simulate 1000 steps using transient algorithm time_step = 0.1*s;



// new loading stage "Shock";
// add load # 2 to node # 2 type linear Fz=100*N;
// 
// define dynamic integrator Newmark with gamma = 0.6 beta = 0.3;
// define algorithm With_no_convergence_check;
// define solver ProfileSPD;
// simulate 750 steps using transient algorithm time_step = 0.01*s;

bye;





  
   

// IMPOSED MOTIONS




// ESSI Test Suite
// ---------------------------------------------------------------------


// model name "truss";
// new loading stage "dynamic";
// 
// 
// add material # 1 type uniaxial_elastic elastic_modulus = 1.0e4*N/m^2 viscoelastic_modulus = 0.0*kg/m/s;
// 
// 
// // Nodal  Coordinates
// add node No 1  at (0*m, 0*m ,  0*m) with 3 dofs;      
// add node No 2  at (1*m, 0*m ,  0*m) with 3 dofs;
// 
// 
// add mass to node # 2 mx = 1000*kg my = 1000*kg mz = 1000*kg;
// 
// 
// // Elements
// add element # 1 type truss with nodes (1, 2) use material # 1 cross_section=1.0*m^2 mass_density=0.0*kg/m^3;
// 
// 
// // Constrains
// fix node No 1 dofs all;
// fix node No 2 dofs uy uz;
// 
// 
// // Load
// add load # 1 to node # 2 type linear Fx=10000*N;
// 
// 
// define dynamic integrator Hilber_Hughes_Taylor with alpha = -0.1;
// define algorithm With_no_convergence_check;
// define solver ProfileSPD;
// 
// simulate 10 steps using transient algorithm time_step = 0.01*s;
// 
// bye;